{"version":3,"sources":["auctions.js","characters.js","dungeons.js","navbar.js","professions.js","quests.js","raids.js","reputation.js","stats.js","tabard.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjhfile":"wow.js","sourcesContent":["$(document).ready(function() {\n    // Load auctions\n    if (window.location.pathname == '/auctions') {\n        loadAuctions();\n        attachAuctionsEventHandlers();\n    }\n});\n\n/**\n * Load content for auctions page\n */\nvar loadAuctions = function() {\n    $.ajax({\n        url : '/auctions/data',\n        method : 'GET',\n        success : function(resp) {\n            $('#auctions-panel').empty();\n            $('#auctions-panel').append(resp);\n            attachAuctionsEventHandlers();\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n};\n\nvar attachAuctionsEventHandlers = function() {\n    // Set pagination links on auction page to make ajax not redirect to page\n    $('.pagination a').click(function() {\n        var href = $(this).attr('href');\n        $(this).removeAttr('href');\n\n        // Pull data out of form\n        var data = {\n            item : $('#item').val(),\n            status : $('#status').val(),\n            time : $('#time').val(),\n            sold : $('#sold').is(':checked')\n        };\n\n        $.ajax({\n            url : href,\n            method : 'GET',\n            data : data,\n            success : function(resp) {\n                $('#auctions-panel').empty();\n                $('#auctions-panel').append(resp);\n                attachAuctionsEventHandlers();\n            },\n            error : function(err) {\n                console.log(err);\n            }\n        });\n    });\n\n    // Auctions searching\n    $('#wow-button-auctions-search').click(function(event) {\n\n        // Pull data out of form before resetting view\n        var data = {\n            item : $('#item').val(),\n            status : $('#status').val(),\n            time : $('#time').val(),\n            sold : $('#sold').is(':checked')\n        };\n\n        $('#auctions-search-modal').modal('hide');\n        $('#auctions-panel').empty();\n        $('#auctions-panel').append('Loading ...');\n        $.ajax({\n            url : '/auctions/data',\n            method : 'GET',\n            data : data,\n            success : function(resp) {\n                $('#auctions-panel').empty();\n                $('#auctions-panel').append(resp);\n                attachAuctionsEventHandlers();\n            },\n            error : function(err) {\n                console.log(err);\n            }\n        });\n    });\n};\n","$(document).ready(function() {\n    // Load characters data\n    if (window.location.pathname == '/characters') {\n        loadCharactersTab({ sort : 0 });\n    }\n});\n\n/**\n * Load characters table and populate with ajax data\n * @param sortData details on any sorting required\n */\nvar loadCharactersTab = function(sortData) {\n    $.ajax({\n        url : '/characters/data',\n        method : 'GET',\n        data : sortData,\n        success : function(resp) {\n            $('#guild-members-list').empty();\n            $('#guild-members-list').append(resp);\n\n            attachCharacterEventHandlers();\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n};\n\nvar attachCharacterEventHandlers = function() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n\n    // Sorting icons\n    $('#guild-members-list th').click(function() {\n        var splitId = $(this).attr('id').split('th-');\n        var sortName = splitId[1]\n        var order = $(this).find('span').attr('sort');\n\n        var newSort = 'asc';\n        if (order == 'asc') {\n            newSort = 'desc';\n        }\n\n        var sortingInfo = {};\n        sortingInfo[sortName] = newSort\n\n        loadCharactersTab({ sort : sortingInfo });\n    });\n\n};\n","$(document).ready(function() {\n    // Load dungeons\n    if (window.location.pathname == '/dungeons') {\n        loadDungeons();\n        attachDungeonEventHandlers();\n    }\n});\n\n/**\n * Load content for dungeons page\n */\nvar loadDungeons = function() {\n    $.ajax({\n        url : '/dungeons/data',\n        method : 'GET',\n        success : function(resp) {\n            $('#dungeons-panel-group').empty();\n            $('#dungeons-panel-group').append(resp);\n\n            $.each($('#dungeons-panel-group').find('.panel-pending'), function() {\n                var dungeonId = $(this).attr('id');\n                var splitId = dungeonId.split('-');\n                loadDungeonRow(splitId[2]);\n            });\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n};\n\n/**\n * Load content for single row on dungeons page\n */\nvar loadDungeonRow = function(id) {\n    $.ajax({\n        url : '/dungeons/data/' + id,\n        method: 'GET',\n        success : function(resp) {\n            var $panel = $('#dungeon-panel-' + id);\n            $panel.empty();\n            $panel.append(resp.view);\n            $panel.removeClass('panel-pending');\n            $panel.addClass(resp.class);\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n};\n\nvar attachDungeonEventHandlers = function() {\n    // Showing dungeon panels on a per-char basis\n    $('#dungeon-char-select').change(function() {\n        var selected = $(this).val();\n        if (selected && (selected != '0')) {\n            $('.dungeon-panel').css('display', 'none');\n            $('.char-' + selected).parents('.dungeon-panel').css('display', 'block');\n        } else {\n            $('.dungeon-panel').css('display', 'block');\n        }\n    });\n};\n","$(document).ready(function() {\n    // Update nav-bar\n    var pathname = window.location.pathname;\n    var $span = $('<span class=\"sr-only\">(current)</span>');\n    switch(pathname) {\n        case '/characters' :\n            $('#navbar-characters').addClass('active');\n            break\n        case '/dungeons' :\n            $('#navbar-dungeons').addClass('active');\n            break;\n        case '/raids' :\n            $('#navbar-raids').addClass('active');\n            break;\n        case '/professions' :\n            $('#navbar-professions').addClass('active');\n            break;\n        case '/stats' :\n            $('#navbar-stats').addClass('active');\n            break;\n        case '/reputation' :\n            $('#navbar-reputation').addClass('active');\n            break;\n        case '/quests' :\n            $('#navbar-quests').addClass('active');\n            break;\n        case '/auctions' :\n            $('#navbar-auctions').addClass('active');\n            break;\n        default :\n            console.log(`Unknown path ${pathname}`);\n    }\n});\n","$(document).ready(function() {\n    if (window.location.pathname == '/professions') {\n        attachProfessionsEventHandlers();\n    }\n});\n\nvar attachProfessionsEventHandlers = function() {\n    // Submitting profession search form\n    $('#wow-button-submit').click(function(event) {\n        event.preventDefault();\n        $('#search-recipes-result').empty();\n        $('#search-recipes-result').append('<br>', '<p class=\"wow-searching\">Searching...</p>');\n\n        var formData = {\n            name : $('#name').val(),\n            profession : $('#profession').val()\n        };\n        $.ajax({\n            url : '/professions/search',\n            data : formData,\n            method : 'GET',\n            success : function(resp) {\n                $('#search-recipes-result').empty();\n                $('#search-recipes-result').append(resp);\n            },\n            error : function(err) {\n                console.log(err);\n            }\n        });\n    });\n};\n","$(document).ready(function() {\n    if (window.location.pathname == '/quests') {\n        setupQuestSearch();\n    }\n});\n\nvar setupQuestSearch = function() {\n    // Quests searching\n    $('#wow-button-submit-quests').click(function(event) {\n        event.preventDefault();\n        $('#quest-results').empty();\n        $('#quest-results').append('<br>', '<p class=\"wow-searching\">Searching...</p>');\n\n        var data = {\n            character : $('#quests-characters-select').val(),\n            category : $('#quests-categories-select').val()\n        };\n        $.ajax({\n            url : '/quests/search',\n            data : data,\n            method : 'GET',\n            success : function(resp) {\n                $('#quest-results').empty();\n                $('#quest-results').append(resp);\n\n                // Attach event handlers to links\n                $('.td-category').click(function(event) {\n                    event.preventDefault();\n                    $('#quests-categories-select').val($(this).attr('category-id'));\n                    $('#quests-characters-select').val($(this).attr('character-id'));\n                    $('#wow-button-submit-quests').click();\n                });\n\n                attachQuestsEventHandlers();\n            },\n            error : function(err) {\n                console.log(err);\n            }\n        });\n    });\n};\n\nvar attachQuestsEventHandlers = function() {\n    // Quests character compare\n    $('#wow-button-submit-quests-compare').click(function(event) {\n        event.preventDefault();\n        var data = {\n            character : $('#quests-characters-select').val(),\n            category : $('#quests-categories-select').val(),\n            compare : $('#quests-compare-characters-select').val()\n        };\n\n        $('#quest-results').empty();\n        $('#quest-results').append('<br>', '<p class=\"wow-searching\">Searching...</p>');\n\n        $.ajax({\n            url : '/quests/search',\n            data : data,\n            method : 'GET',\n            success : function(resp) {\n                $('#quest-results').empty();\n                $('#quest-results').append(resp);\n\n                // Attach event handlers to links\n                $('.td-category').click(function(event) {\n                    event.preventDefault();\n                    $('#quests-categories-select').val($(this).attr('category-id'));\n                    $('#quests-characters-select').val($(this).attr('character-id'));\n                    $('#wow-button-submit-quests').click();\n                });\n\n                attachQuestsEventHandlers();\n            },\n            error : function(err) {\n                console.log(err);\n            }\n        });\n    });\n};\n","$(document).ready(function() {\n    // Load raids\n    if (window.location.pathname == '/raids') {\n        loadRaids();\n        addRaidsEventHandlers();\n    }\n});\n\n/**\n * Load content for raids page\n */\nvar loadRaids = function() {\n    $.ajax({\n        url : '/raids/data',\n        method : 'GET',\n        success : function(resp) {\n            $('#raids-panel-group').empty();\n            $('#raids-panel-group').append(resp);\n\n            $.each($('#raids-panel-group').find('.panel-pending'), function() {\n                var raidId = $(this).attr('id');\n                var splitId = raidId.split('-');\n                loadRaidRow(splitId[2]);\n            });\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n};\n\n/**\n * Load content for a single row on the raids page\n */\nvar loadRaidRow = function(id) {\n    $.ajax({\n        url : '/raids/data/' + id,\n        method : 'GET',\n        success : function(resp) {\n            var $panel = $('#raid-panel-' + id);\n            $panel.empty();\n            $panel.append(resp.view);\n            $panel.removeClass('panel-pending');\n            $panel.addClass(resp.class);\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n};\n\nvar addRaidsEventHandlers = function() {\n    // Showing raid panels on a per-char basis\n    $('#raid-char-select').change(function() {\n        var selected = $(this).val();\n        if (selected && (selected != '0')) {\n            $('.dungeon-panel').css('display', 'none');\n            $('.char-' + selected).parents('.dungeon-panel').css('display', 'block');\n        } else {\n            $('.dungeon-panel').css('display', 'block');\n        }\n    });\n};\n","$(document).ready(function() {\n    // Load reputation\n    if (window.location.pathname == '/reputation') {\n        loadReputation();\n        attachReputationEventHandlers();\n    }\n});\n\n/**\n * Load content for reputations page\n */\nvar loadReputation = function() {\n    $.ajax({\n        url : '/reputation/data',\n        method : 'GET',\n        success : function(resp) {\n            $('#reputations-panel-group').empty();\n            $('#reputations-panel-group').append(resp);\n\n            // Loop over and pull in data\n            $.each($('#reputations-panel-group').find('.panel-pending'), function() {\n                var factionId = $(this).attr('id');\n                var splitId = factionId.split('-');\n                loadReputationRow(splitId[2]);\n            });\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n};\n\n/**\n * Load content for a single row on the reputations page\n */\nvar loadReputationRow = function(id) {\n    $.ajax({\n        url : '/reputation/data/' + id,\n        method: 'GET',\n        success : function(resp) {\n            var $panel = $('#reputation-panel-' + id);\n            $panel.empty();\n            $panel.append(resp.view);\n            $panel.removeClass('panel-pending');\n            $panel.addClass(resp.class);\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n};\n\nvar attachReputationEventHandlers = function() {\n    // Showing reputation panels on a per-char basis\n    $('#reputation-char-select').change(function() {\n        var selected = $(this).val();\n        if (selected && (selected != '0')) {\n            $('.reputation-panel').css('display', 'none');\n            $('.char-' + selected).parents('.reputation-panel').css('display', 'block');\n        } else {\n            $('.reputation-panel').css('display', 'block');\n        }\n    });\n};\n","$(document).ready(function() {\n    // Load status\n    if (window.location.pathname == '/stats') {\n        loadGraphs();\n        loadDeaths();\n        loadKills();\n    }\n});\n\n/**\n * Load table for character deaths\n */\nvar loadDeaths = function() {\n    $.ajax({\n        url : '/stats/deaths',\n        method : 'GET',\n        success : function(resp) {\n            $('#most-deaths').empty();\n            $('#most-deaths').append(resp);\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n};\n\n/**\n * Load table for character kills\n */\nvar loadKills = function() {\n    $.ajax({\n        url : '/stats/kills',\n        method : 'GET',\n        success : function(resp) {\n            $('#most-kills').empty();\n            $('#most-kills').append(resp);\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n};\n\n\n\n/**\n * Load stats for graphs\n */\nvar loadGraphs = function() {\n    $.ajax({\n        url : '/stats/data/candlestick',\n        method : 'GET',\n        success : function(resp) {\n            drawChart(resp);\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n    $.ajax({\n        url: '/stats/data/pie',\n        method : 'GET',\n        success : function(resp) {\n            drawPieChart(resp);\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n};\n\nvar drawChart = function(respData) {\n    google.charts.load('current', {'packages':['corechart']});\n    google.charts.setOnLoadCallback(drawCandlestickChart);\n\n    var chartData = [];\n\n    for(var item in respData) {\n\n        var row = respData[item];\n        var newDataItem = [\n            row.name,\n            parseInt(row.min_level),\n            parseInt(row.lower_q),\n            parseInt(row.upper_q),\n            parseInt(row.max_level)\n        ];\n\n        chartData.push(newDataItem);\n    }\n\n\n\n    function drawCandlestickChart() {\n        var data = google.visualization.arrayToDataTable(chartData, true);\n\n        var options = {\n            title : 'Class distribution by level',\n            titlePosition : 'out',\n            titleTextStyle : {\n                color : '#f5eBd1',\n                fontSize : 18\n            },\n            legend : 'none',\n            enableInteractivity : false,\n            hAxis : {\n                textStyle : {\n                    color : '#f5eBd1'\n                },\n                title : 'Class',\n                titleTextStyle : {\n                    color : '#f5eBd1',\n                    fontSize : 16\n                }\n            },\n            vAxis : {\n                ticks : [0, 30, 60, 90, 110],\n                maxValue : 110,\n                viewWindow : {\n                    max : 110\n                },\n                textStyle : {\n                    color : '#f5eBd1'\n                },\n                title : 'Level',\n                titleTextStyle : {\n                    color : '#f5eBd1',\n                    fontSize : 16\n                },\n                gridlines : {\n                    color : '#666'\n                }\n            },\n            backgroundColor : {\n                stroke : '#f5eBd1',\n                fill : '#231207'\n            },\n            colors : ['yellow']       // specific for later lookups\n        };\n\n        var chart = new google.visualization.CandlestickChart(document.getElementById('stats-div'));\n\n        chart.draw(data, options);\n\n        // Apply custom styling\n        var $rect = $('svg').find('rect[fill=\"#ffff00\"]');\n\n        var colors = [\n            '#c41e3b', // Death Knight\n            '#a330c9', // Demon Hunter\n            '#ff7c0a', // Druid\n            '#aad372', // Hunter\n            '#68ccef', // Mage\n            '#00ffba', // Monk\n            '#f48cba', // Paladin\n            'white', // Priest\n            '#fff468', // Rogue\n            '#2359ff', // Shaman\n            '#9382c9', // Warlock\n            '#c69b6d' // Warrior\n        ];\n\n        var $tooltip = $('<div></div>');\n        $tooltip.addClass('chart-tooltip');\n        $tooltip.css('display', 'none');\n        $tooltip.css('position', 'absolute');\n        $tooltip.text('Tooltip');\n        $('body').append($tooltip);\n\n        var i = 0;\n        $.each($rect, function() {\n            var colorIndex = Math.floor(i / 2);\n            $(this).attr('fill', colors[colorIndex]);\n            $(this).attr('stroke', colors[colorIndex]);\n            $(this).attr('index', colorIndex);\n            i++;\n\n            $(this).mouseover(function() {\n                var index = $(this).attr('index');\n                var tooltipText = `${respData[index].name} (${respData[index].total}) : ${respData[index].min_level}-${respData[index].max_level} mean ${Math.round(respData[index].avg_level)}`;\n\n                $tooltip.css('top', event.clientY + 10);\n                $tooltip.css('left', event.clientX + 10);\n                $tooltip.css('display', 'block');\n                $tooltip.text(tooltipText);\n            });\n\n            $(this).mouseleave(function() {\n                $tooltip.css('display', 'none');\n            });\n        });\n\n    };\n};\n\nvar drawPieChart = function(respData) {\n    google.charts.load('current', {'packages':['corechart']});\n    google.charts.setOnLoadCallback(drawPieChart);\n\n    function drawPieChart() {\n\n        var colorMap = {\n            1 : '#c69b6d', // Warrior\n            2 : '#f48cba', // Paladin\n            3 : '#aad372', // Hunter\n            4 : '#fff468', // Rogue\n            5 : 'white', // Priest\n            6 : '#c41e3b', // Death Knight\n            7 : '#2359ff', // Shaman\n            8 : '#68ccef', // Mage\n            9 : '#9382c9', // Warlock\n            10 : '#00ffba', // Monk\n            11 : '#ff7c0a', // Druid\n            12 : '#a330c9', // Demon Hunter\n        };\n\n        var rawData = [];\n        var sliceData = {};\n        rawData.push(['Class', 'Total Kills']);\n        $.each(respData, function(k, v) {\n            rawData.push([v.name, parseInt(v.kills)]);\n            sliceData[k] = { 'color' : colorMap[ v['id_ext'] ] };\n        });\n\n        var data = google.visualization.arrayToDataTable(rawData);\n\n        var options = {\n            title: 'Kills by Class',\n            titlePosition : 'out',\n            titleTextStyle : {\n                color : '#f5eBd1',\n                fontSize : 18\n            },\n            backgroundColor : {\n                stroke : '#f5eBd1',\n                fill : '#231207'\n            },\n            slices : sliceData,\n            legend : {\n                textStyle : {\n                    color : '#f5eBd1'\n                }\n            },\n            tooltip : {\n                isHtml : true\n            }\n        };\n\n        var chart = new google.visualization.PieChart(document.getElementById('stats-pie-div'));\n\n        chart.draw(data, options);\n    };\n};\n","$(document).ready(function() {\n\n    $.ajax({\n        url : '/tabard',\n        method : 'GET',\n        success : function(resp) {\n            var tabard = new GuildTabard(JSON.parse(resp));\n        },\n        error : function(err) {\n            console.log(err);\n        }\n    });\n\n    function GuildTabard(guildMeta) {\n\n        var canvas = document.getElementById('guild-tabard');\n        var context = canvas.getContext('2d');\n\n        var self = this,\n            _width = canvas.width,\n            _height = canvas.height,\n            _src = [\n                '/images/ring.png',\n                '/images/shadow.png',\n                '/images/background.png',\n                '/images/overlay.png',\n                '/images/border.png',\n                '/images/emblem.png',\n                '/images/hooks.png'\n            ],\n\n            // Colors that need to be applied to each layer\n            _color = [\n                null,\n                null,\n                guildMeta['background_color_data'],\n                null,\n                guildMeta['border_color_data'],\n                guildMeta['icon_color_data'],\n                null\n            ],\n\n            // Positions to overlay each image at\n            _position = [\n                [ 0, 0, (_width*216/240), (_width*216/240) ],\n                [ (_width*18/240), (_width*27/240), (_width*179/240), (_width*216/240) ],\n                [ (_width*18/240), (_width*27/240), (_width*179/240), (_width*210/240) ],\n                [ (_width*18/240), (_width*27/240), (_width*179/240), (_width*210/240) ],\n                [ (_width*31/240), (_width*40/240), (_width*147/240), (_width*159/240) ],\n                [ (_width*33/240), (_width*57/240), (_width*125/240), (_width*125/240) ],\n                [ (_width*18/240), (_width*27/240), (_width*179/240), (_width*32/240) ]\n            ],\n            _img = [ new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image() ];\n            $(canvas).css('opacity', 0);\n        ;\n\n        self.drawImage = function() {\n\n            // Draw onto canvas\n            _img[0].src = _src[0];\n            context.drawImage(_img[0], _position[0][0], _position[0][1], _position[0][2], _position[0][3]);\n\n            $(canvas).animate({opacity: 1}, 400);\n        };\n\n        function _render(index) {\n            var _oldCanvas = new Image(),\n                _newCanvas = new Image();\n\n            // Load in contents behind new layer\n            _img[index].src = _src[index];\n\n            _img[index].onload = function() {\n                _oldCanvas.src = canvas.toDataURL('image/png');\n            };\n\n            _oldCanvas.onload = function() {\n                canvas.width = 1;\n                canvas.width = _width;\n                context.drawImage(_img[index], _position[index][0], _position[index][1], _position[index][2], _position[index][3]);\n\n                if (typeof _color[index] !== 'undefined' && _color[index] !== null) {\n                    _colorize(_color[index][0], _color[index][1], _color[index][2]);\n                }\n\n                _newCanvas.src = canvas.toDataURL('image/png');\n                context.drawImage(_oldCanvas, 0, 0, _width, _height);\n            };\n\n            _newCanvas.onload = function() {\n                context.drawImage(_newCanvas, 0, 0, _width, _height);\n                index++;\n\n                if (index < _src.length) {\n                    _render(index);\n                } else {\n                    $(canvas).animate({opacity: 1}, 400);\n                }\n            };\n        };\n\n        function _colorize(r, g, b) {\n            var imageData = context.getImageData(0, 0, _width, _height),\n                pixelData = imageData.data,\n                i = pixelData.length,\n                intensityScale = 19,\n                blend = 1 / 3,\n                added_r = r / intensityScale + r * blend,\n                added_g = g / intensityScale + g * blend,\n                added_b = b / intensityScale + b * blend,\n                scale_r = r / 255 + blend,\n                scale_g = g / 255 + blend,\n                scale_b = b / 255 + blend;\n\n            do {\n                if (pixelData[i + 3] !== 0) {\n                    pixelData[i] = pixelData[i] * scale_r + added_r;\n                    pixelData[i + 1] = pixelData[i + 1] * scale_g + added_g;\n                    pixelData[i + 2] = pixelData[i + 2] * scale_b + added_b;\n                }\n            } while (i -= 4);\n            context.putImageData(imageData, 0, 0);\n        };\n\n        _render(0);\n    };\n});\n"]}